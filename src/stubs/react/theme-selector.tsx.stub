import { Button } from '@/components/ui/button';
import {
    DropdownMenu,
    DropdownMenuContent,
    DropdownMenuItem,
    DropdownMenuLabel,
    DropdownMenuSeparator,
    DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';
import { useAppearance } from '@/hooks/use-appearance';
import { themes } from '@/lib/themes';
import { Check, Palette } from 'lucide-react';
import { HTMLAttributes } from 'react';

export default function ThemeSelector({ className = '', ...props }: HTMLAttributes<HTMLDivElement>) {
    const { themeId, updateTheme } = useAppearance();

    return (
        <div className={className} {...props}>
            <DropdownMenu>
                <DropdownMenuTrigger asChild>
                    <Button variant="ghost" size="icon" className="h-9 w-9 rounded-md">
                        <Palette className="h-5 w-5" />
                        <span className="sr-only">Selecionar tema</span>
                    </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end" className="w-56">
                    <DropdownMenuLabel>Selecionar Tema</DropdownMenuLabel>
                    <DropdownMenuSeparator />
                    {themes.map((theme) => (
                        <DropdownMenuItem
                            key={theme.id}
                            onClick={() => updateTheme(theme.id)}
                            className="flex cursor-pointer items-center justify-between"
                        >
                            <div className="flex flex-col">
                                <span className="font-medium">{theme.name}</span>
                                {theme.description && <span className="text-xs text-muted-foreground">{theme.description}</span>}
                            </div>
                            {themeId === theme.id && <Check className="h-4 w-4 text-primary" />}
                        </DropdownMenuItem>
                    ))}
                </DropdownMenuContent>
            </DropdownMenu>
        </div>
    );
}
