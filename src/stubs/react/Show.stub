import React from 'react';
import { Head, Link, router } from '@inertiajs/react';
import { ArrowLeftIcon,  PencilIcon, TrashIcon } from 'lucide-react';
import AppLayout from '@/layouts/app-layout';
import { PageProps } from '@/types';
import DangerButton from '@/Components/DangerButton';
import SecondaryButton from '@/Components/SecondaryButton';
import PrimaryButton from '@/Components/PrimaryButton';
{{themeImports}}

interface ShowProps extends PageProps {
    {{modelCamel}}: {{modelName}};
}

export default function Show({ auth, {{modelCamel}} }: ShowProps) {
    const handleDelete = () => {
        if (confirm('Tem certeza que deseja excluir este {{modelTitle}}?')) {
            router.delete(route('{{modelRoute}}.destroy', {{modelCamel}}.id));
        }
    };

    const breadcrumbs = [
        {
            title: 'Dashboard',
            href: '/dashboard',
        },
        {
            title: '{{modelTitlePlural}}',
            href: '/{{modelRoutePlural}}',
        },
        {
            title: 'Visualizar {{modelTitle}}',
            href: `/{{modelRoutePlural}}/{{modelCamel}}.id`,
        },
    ];

    return (
        <AppLayout breadcrumbs={breadcrumbs} >
            <Head title="Visualizar {{modelTitle}}" />

            <div className="py-12">
                <div className="max-w-4xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg">
                        <div className="p-6">
                            {/* Header */}
                            <div className="flex items-center justify-between mb-6">
                                <div className="flex items-center gap-4">
                                    <Link
                                        href={route('{{modelRoute}}.index')}
                                        className="inline-flex items-center px-4 py-2 bg-gray-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                    >
                                        <ArrowLeftIcon className="w-4 h-4 mr-2" />
                                        Voltar
                                    </Link>
                                    <h3 className="text-lg font-medium text-gray-900 dark:text-gray-100">
                                        {{modelTitle}} #{{'{'}}{{{{modelCamel}}.id}{{'}}'}}
                                    </h3>
                                </div>

                                <div className="flex items-center space-x-4">
                                    <Link
                                        href={route('{{modelRoute}}.edit', {{modelCamel}}.id)}
                                        className="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700 active:bg-blue-900 focus:outline-none focus:border-blue-900 focus:ring ring-blue-300 disabled:opacity-25 transition ease-in-out duration-150"
                                    >
                                        <PencilIcon className="w-4 h-4 mr-2" />
                                        Editar
                                    </Link>
                                    <button
                                        onClick={handleDelete}
                                        className="inline-flex items-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-700 active:bg-red-900 focus:outline-none focus:border-red-900 focus:ring ring-red-300 disabled:opacity-25 transition ease-in-out duration-150"
                                    >
                                        <TrashIcon className="w-4 h-4 mr-2" />
                                        Excluir
                                    </button>
                                </div>
                            </div>

                            {/* Content */}
                            <div className="bg-gray-50 dark:bg-gray-900 rounded-lg p-6">
                                <dl className="grid grid-cols-1 gap-x-6 gap-y-6 sm:grid-cols-2">
{{showFieldsReact}}
                                </dl>
                            </div>

                            {/* Timestamps */}
                            <div className="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
                                <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                                    <div>
                                        <dt className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                            Criado em
                                        </dt>
                                        <dd className="mt-1 text-sm text-gray-900 dark:text-gray-100">
                                            {new Date({{modelCamel}}.created_at).toLocaleString('pt-BR')}
                                        </dd>
                                    </div>
                                    <div>
                                        <dt className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                            Atualizado em
                                        </dt>
                                        <dd className="mt-1 text-sm text-gray-900 dark:text-gray-100">
                                            {new Date({{modelCamel}}.updated_at).toLocaleString('pt-BR')}
                                        </dd>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </AppLayout>
    );
}
